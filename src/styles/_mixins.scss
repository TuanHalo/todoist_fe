@use "sass:map";

$breakpoints: (
  xs: 0px,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

@mixin breakpoint($size) {
  $breakpoint-value: map.get($breakpoints, $size);

  @if $breakpoint-value {
    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @error "Breakpoint `#{$size}` not found in map `$breakpoints`";
  }
}

@mixin font($value) {
  $font-sizes: map.get($value, font-size);
  $font-weights: map.get($value, font-weight);
  $line-heights: map.get($value, line-height);
  $letter-spacings: map.get($value, letter-spacing);

  @if $font-sizes {
    @each $name, $breakpoint in $breakpoints {
      @include breakpoint($name) {
        $font-size: map.get($font-sizes, $name);

        @if $font-size {
          font-size: $font-size;
        }
      }
    }
  } @else {
    @error "Font size is required";
  }

  @if $font-weights {
    @each $name, $breakpoint in $breakpoints {
      @include breakpoint($name) {
        $font-weight: map.get($font-weights, $name);

        @if $font-weight {
          font-weight: $font-weight;
        }
      }
    }
  } @else {
    @error "Font weight is required";
  }

  @if $line-heights {
    @each $name, $breakpoint in $breakpoints {
      @include breakpoint($name) {
        $line-height: map.get($line-heights, $name);

        @if $line-height {
          line-height: $line-height;
        }
      }
    }
  } @else {
    @error "Line height is required";
  }

  @if $letter-spacings {
    @each $name, $breakpoint in $breakpoints {
      @include breakpoint($name) {
        $letter-spacing: map.get($letter-spacings, $name);

        @if $letter-spacing {
          letter-spacing: $letter-spacing;
        }
      }
    }
  } @else {
    @error "Letter spacing is required";
  }
}

@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap,
  $gap: 0px
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
  gap: $gap;
}
